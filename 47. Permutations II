Problem: 47. Permutations II

class Solution {
public:
    void swap(vector<int> &nums,int i,int j){
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
    void generate(vector<int> &nums, vector<vector<int>> &vec){
        while (1){
            vec.push_back(nums);
            int i=nums.size()-1;
            while (i>0 && nums[i-1]>=nums[i])
                i--;
            if (i<=0)
                break;
            int j=nums.size()-1;
            while (nums[i-1]>=nums[j])
                j--;
            int temp=nums[i-1];
            nums[i-1]=nums[j];
            nums[j]=temp;
            j=nums.size()-1;
            while (i<j){
                int temp=nums[i];
                nums[i]=nums[j];
                nums[j]=temp;
                i++;
                j--;
            }
        }
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>> vec;
        sort(nums.begin(),nums.end());
        generate(nums,vec);
        return vec;
    }
};



    
